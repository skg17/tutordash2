name: Build and Deploy to Homelab

on:
  push:
    branches: [ main ] # Trigger this workflow on pushes to the main branch

jobs:
  build-and-update-manifest:
    runs-on: self-hosted # IMPORTANT: Tells GitHub to use YOUR runner!

    permissions:
      contents: write # Allows pushing the updated manifest
      packages: write # Allows pushing the image to ghcr

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          # We need repo access to push the manifest change
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # Provided automatically by GitHub

      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@v5
        with:
          context: . # Assumes Dockerfile is in the root
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:latest

      - name: Calculate Image Tag for Manifest
        id: set_vars
        run: |
          # Calculate the full image path and store it in an output variable
          IMAGE_TAG="ghcr.io/${{ github.repository }}:latest"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Update Kubernetes Image Tag to :latest
        uses: mikefarah/yq@v4
        with:
          cmd: |
            # Set the image to the newly pushed :latest tag
            yq -i '.spec.template.spec.containers[0].image = "${{ steps.set_vars.outputs.IMAGE_TAG }}"' k8s/deployment.yaml

      - name: Commit and push manifest changes
        run: |
          # 1. Configure the identity
          git config --global user.name 'GitHub Actions CI'
          git config --global user.email 'ci@github.actions'
          
          # 2. Add the modified file
          git add k8s/deployment.yaml
          
          # 3. Check if there are actual changes to commit
          if git diff --staged --quiet; then
            echo "No changes detected in k8s/deployment.yaml. Skipping commit."
            exit 0
          fi
          
          # 4. Commit the changes
          git commit -m "CI: Update deployment image to latest (${{ github.sha_short }})"
          
          # 5. CRITICAL: Push using the token URL (This ensures authentication!)
          # The token is read from the 'GITHUB_TOKEN' secret
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main