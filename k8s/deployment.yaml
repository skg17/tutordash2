apiVersion: apps/v1
kind: Deployment
metadata:
  name: tutordash
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tutordash
  template:
    metadata:
      labels:
        app: tutordash
    spec:
      # 1. INIT CONTAINERS (Migrations)
      initContainers:
        - name: migrations
          image: ghcr.io/skg17/tutordash2:677504b65240105d76cbad42d89efc80ccdc9d98
          env:
            # Pass SECRET_KEY_BASE to avoid crashing during Rails environment load
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: rails-secret-key
                  key: SECRET_KEY_BASE
            # SECURELY INJECT DB CREDS FOR MIGRATIONS
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: DB_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: DB_PASS
            - name: DATABASE_URL
              value: postgres://$(PGUSER):$(PGPASSWORD)@postgres-svc:5432/tutordash_production
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e
              echo "Attempting to create DB and load schema..."
              # This allows destructive actions in production mode.
              DISABLE_DATABASE_ENVIRONMENT_CHECK=1 bundle exec rails db:create
              DISABLE_DATABASE_ENVIRONMENT_CHECK=1 bundle exec rails db:schema:load 
              
              DISABLE_DATABASE_ENVIRONMENT_CHECK=1 bundle exec rails db:seed 
              
              echo "Schema load successful. Proceeding to main container."
      # 2. MAIN CONTAINERS (Application)
      containers:
        - name: app
          image: ghcr.io/skg17/tutordash2:677504b65240105d76cbad42d89efc80ccdc9d98
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args: ["bundle exec rails server -b 0.0.0.0 -p 3000"]
          env:
            # INJECT ALL REQUIRED ENVIRONMENT VARIABLES FOR THE APP
            - name: RAILS_ENV
              value: production
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: rails-secret-key
                  key: SECRET_KEY_BASE
            # Re-inject DB user/pass for the main app container
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: DB_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: DB_PASS
            - name: DATABASE_URL
              value: postgres://$(PGUSER):$(PGPASSWORD)@postgres-svc:5432/tutordash_production
          ports:
            - containerPort: 3000
      # 3. IMAGESECRETS
      imagePullSecrets:
        - name: ghcr-login-secret
